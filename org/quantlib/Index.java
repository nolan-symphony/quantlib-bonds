/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.quantlib;

public class Index extends Observable {
  private transient long swigCPtr;
  private transient boolean swigCMemOwnDerived;

  protected Index(long cPtr, boolean cMemoryOwn) {
    super(QuantLibJNI.Index_SWIGSmartPtrUpcast(cPtr), true);
    swigCMemOwnDerived = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(Index obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void swigSetCMemOwn(boolean own) {
    swigCMemOwnDerived = own;
    super.swigSetCMemOwn(own);
  }

  @SuppressWarnings("deprecation")
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwnDerived) {
        swigCMemOwnDerived = false;
        QuantLibJNI.delete_Index(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public String name() {
    return QuantLibJNI.Index_name(swigCPtr, this);
  }

  public Calendar fixingCalendar() {
    return new Calendar(QuantLibJNI.Index_fixingCalendar(swigCPtr, this), true);
  }

  public boolean isValidFixingDate(Date fixingDate) {
    return QuantLibJNI.Index_isValidFixingDate(swigCPtr, this, Date.getCPtr(fixingDate), fixingDate);
  }

  public boolean hasHistoricalFixing(Date fixingDate) {
    return QuantLibJNI.Index_hasHistoricalFixing(swigCPtr, this, Date.getCPtr(fixingDate), fixingDate);
  }

  public double fixing(Date fixingDate, boolean forecastTodaysFixing) {
    return QuantLibJNI.Index_fixing__SWIG_0(swigCPtr, this, Date.getCPtr(fixingDate), fixingDate, forecastTodaysFixing);
  }

  public double fixing(Date fixingDate) {
    return QuantLibJNI.Index_fixing__SWIG_1(swigCPtr, this, Date.getCPtr(fixingDate), fixingDate);
  }

  public void addFixing(Date fixingDate, double fixing, boolean forceOverwrite) {
    QuantLibJNI.Index_addFixing__SWIG_0(swigCPtr, this, Date.getCPtr(fixingDate), fixingDate, fixing, forceOverwrite);
  }

  public void addFixing(Date fixingDate, double fixing) {
    QuantLibJNI.Index_addFixing__SWIG_1(swigCPtr, this, Date.getCPtr(fixingDate), fixingDate, fixing);
  }

  public RealTimeSeries timeSeries() {
    return new RealTimeSeries(QuantLibJNI.Index_timeSeries(swigCPtr, this), false);
  }

  public void clearFixings() {
    QuantLibJNI.Index_clearFixings(swigCPtr, this);
  }

  public void addFixings(DateVector fixingDates, DoubleVector fixings, boolean forceOverwrite) {
    QuantLibJNI.Index_addFixings__SWIG_0(swigCPtr, this, DateVector.getCPtr(fixingDates), fixingDates, DoubleVector.getCPtr(fixings), fixings, forceOverwrite);
  }

  public void addFixings(DateVector fixingDates, DoubleVector fixings) {
    QuantLibJNI.Index_addFixings__SWIG_1(swigCPtr, this, DateVector.getCPtr(fixingDates), fixingDates, DoubleVector.getCPtr(fixings), fixings);
  }

  public String toString() {
    return QuantLibJNI.Index_toString(swigCPtr, this);
  }

}
