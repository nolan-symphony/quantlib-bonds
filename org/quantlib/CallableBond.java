/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.quantlib;

public class CallableBond extends Bond {
  private transient long swigCPtr;
  private transient boolean swigCMemOwnDerived;

  protected CallableBond(long cPtr, boolean cMemoryOwn) {
    super(QuantLibJNI.CallableBond_SWIGSmartPtrUpcast(cPtr), true);
    swigCMemOwnDerived = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(CallableBond obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void swigSetCMemOwn(boolean own) {
    swigCMemOwnDerived = own;
    super.swigSetCMemOwn(own);
  }

  @SuppressWarnings("deprecation")
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwnDerived) {
        swigCMemOwnDerived = false;
        QuantLibJNI.delete_CallableBond(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public CallabilitySchedule callability() {
    return new CallabilitySchedule(QuantLibJNI.CallableBond_callability(swigCPtr, this), false);
  }

  public double impliedVolatility(double targetValue, YieldTermStructureHandle discountCurve, double accuracy, long maxEvaluations, double minVol, double maxVol) {
    return QuantLibJNI.CallableBond_impliedVolatility(swigCPtr, this, targetValue, YieldTermStructureHandle.getCPtr(discountCurve), discountCurve, accuracy, maxEvaluations, minVol, maxVol);
  }

  public double OAS(double cleanPrice, YieldTermStructureHandle engineTS, DayCounter dc, Compounding compounding, Frequency freq, Date settlementDate, double accuracy, long maxIterations, double guess) {
    return QuantLibJNI.CallableBond_OAS__SWIG_0(swigCPtr, this, cleanPrice, YieldTermStructureHandle.getCPtr(engineTS), engineTS, DayCounter.getCPtr(dc), dc, compounding.swigValue(), freq.swigValue(), Date.getCPtr(settlementDate), settlementDate, accuracy, maxIterations, guess);
  }

  public double OAS(double cleanPrice, YieldTermStructureHandle engineTS, DayCounter dc, Compounding compounding, Frequency freq, Date settlementDate, double accuracy, long maxIterations) {
    return QuantLibJNI.CallableBond_OAS__SWIG_1(swigCPtr, this, cleanPrice, YieldTermStructureHandle.getCPtr(engineTS), engineTS, DayCounter.getCPtr(dc), dc, compounding.swigValue(), freq.swigValue(), Date.getCPtr(settlementDate), settlementDate, accuracy, maxIterations);
  }

  public double OAS(double cleanPrice, YieldTermStructureHandle engineTS, DayCounter dc, Compounding compounding, Frequency freq, Date settlementDate, double accuracy) {
    return QuantLibJNI.CallableBond_OAS__SWIG_2(swigCPtr, this, cleanPrice, YieldTermStructureHandle.getCPtr(engineTS), engineTS, DayCounter.getCPtr(dc), dc, compounding.swigValue(), freq.swigValue(), Date.getCPtr(settlementDate), settlementDate, accuracy);
  }

  public double OAS(double cleanPrice, YieldTermStructureHandle engineTS, DayCounter dc, Compounding compounding, Frequency freq, Date settlementDate) {
    return QuantLibJNI.CallableBond_OAS__SWIG_3(swigCPtr, this, cleanPrice, YieldTermStructureHandle.getCPtr(engineTS), engineTS, DayCounter.getCPtr(dc), dc, compounding.swigValue(), freq.swigValue(), Date.getCPtr(settlementDate), settlementDate);
  }

  public double OAS(double cleanPrice, YieldTermStructureHandle engineTS, DayCounter dc, Compounding compounding, Frequency freq) {
    return QuantLibJNI.CallableBond_OAS__SWIG_4(swigCPtr, this, cleanPrice, YieldTermStructureHandle.getCPtr(engineTS), engineTS, DayCounter.getCPtr(dc), dc, compounding.swigValue(), freq.swigValue());
  }

  public double cleanPriceOAS(double oas, YieldTermStructureHandle engineTS, DayCounter dayCounter, Compounding compounding, Frequency frequency, Date settlementDate) {
    return QuantLibJNI.CallableBond_cleanPriceOAS__SWIG_0(swigCPtr, this, oas, YieldTermStructureHandle.getCPtr(engineTS), engineTS, DayCounter.getCPtr(dayCounter), dayCounter, compounding.swigValue(), frequency.swigValue(), Date.getCPtr(settlementDate), settlementDate);
  }

  public double cleanPriceOAS(double oas, YieldTermStructureHandle engineTS, DayCounter dayCounter, Compounding compounding, Frequency frequency) {
    return QuantLibJNI.CallableBond_cleanPriceOAS__SWIG_1(swigCPtr, this, oas, YieldTermStructureHandle.getCPtr(engineTS), engineTS, DayCounter.getCPtr(dayCounter), dayCounter, compounding.swigValue(), frequency.swigValue());
  }

  public double effectiveDuration(double oas, YieldTermStructureHandle engineTS, DayCounter dayCounter, Compounding compounding, Frequency frequency, double bump) {
    return QuantLibJNI.CallableBond_effectiveDuration__SWIG_0(swigCPtr, this, oas, YieldTermStructureHandle.getCPtr(engineTS), engineTS, DayCounter.getCPtr(dayCounter), dayCounter, compounding.swigValue(), frequency.swigValue(), bump);
  }

  public double effectiveDuration(double oas, YieldTermStructureHandle engineTS, DayCounter dayCounter, Compounding compounding, Frequency frequency) {
    return QuantLibJNI.CallableBond_effectiveDuration__SWIG_1(swigCPtr, this, oas, YieldTermStructureHandle.getCPtr(engineTS), engineTS, DayCounter.getCPtr(dayCounter), dayCounter, compounding.swigValue(), frequency.swigValue());
  }

  public double effectiveConvexity(double oas, YieldTermStructureHandle engineTS, DayCounter dayCounter, Compounding compounding, Frequency frequency, double bump) {
    return QuantLibJNI.CallableBond_effectiveConvexity__SWIG_0(swigCPtr, this, oas, YieldTermStructureHandle.getCPtr(engineTS), engineTS, DayCounter.getCPtr(dayCounter), dayCounter, compounding.swigValue(), frequency.swigValue(), bump);
  }

  public double effectiveConvexity(double oas, YieldTermStructureHandle engineTS, DayCounter dayCounter, Compounding compounding, Frequency frequency) {
    return QuantLibJNI.CallableBond_effectiveConvexity__SWIG_1(swigCPtr, this, oas, YieldTermStructureHandle.getCPtr(engineTS), engineTS, DayCounter.getCPtr(dayCounter), dayCounter, compounding.swigValue(), frequency.swigValue());
  }

}
