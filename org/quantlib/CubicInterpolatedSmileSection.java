/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.quantlib;

public class CubicInterpolatedSmileSection extends SmileSection {
  private transient long swigCPtr;
  private transient boolean swigCMemOwnDerived;

  protected CubicInterpolatedSmileSection(long cPtr, boolean cMemoryOwn) {
    super(QuantLibJNI.CubicInterpolatedSmileSection_SWIGSmartPtrUpcast(cPtr), true);
    swigCMemOwnDerived = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(CubicInterpolatedSmileSection obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void swigSetCMemOwn(boolean own) {
    swigCMemOwnDerived = own;
    super.swigSetCMemOwn(own);
  }

  @SuppressWarnings("deprecation")
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwnDerived) {
        swigCMemOwnDerived = false;
        QuantLibJNI.delete_CubicInterpolatedSmileSection(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public CubicInterpolatedSmileSection(double expiryTime, DoubleVector strikes, QuoteHandleVector stdDevHandles, QuoteHandle atmLevel, Cubic interpolator, DayCounter dc, VolatilityType type, double shift) {
    this(QuantLibJNI.new_CubicInterpolatedSmileSection__SWIG_0(expiryTime, DoubleVector.getCPtr(strikes), strikes, QuoteHandleVector.getCPtr(stdDevHandles), stdDevHandles, QuoteHandle.getCPtr(atmLevel), atmLevel, Cubic.getCPtr(interpolator), interpolator, DayCounter.getCPtr(dc), dc, type.swigValue(), shift), true);
  }

  public CubicInterpolatedSmileSection(double expiryTime, DoubleVector strikes, QuoteHandleVector stdDevHandles, QuoteHandle atmLevel, Cubic interpolator, DayCounter dc, VolatilityType type) {
    this(QuantLibJNI.new_CubicInterpolatedSmileSection__SWIG_1(expiryTime, DoubleVector.getCPtr(strikes), strikes, QuoteHandleVector.getCPtr(stdDevHandles), stdDevHandles, QuoteHandle.getCPtr(atmLevel), atmLevel, Cubic.getCPtr(interpolator), interpolator, DayCounter.getCPtr(dc), dc, type.swigValue()), true);
  }

  public CubicInterpolatedSmileSection(double expiryTime, DoubleVector strikes, QuoteHandleVector stdDevHandles, QuoteHandle atmLevel, Cubic interpolator, DayCounter dc) {
    this(QuantLibJNI.new_CubicInterpolatedSmileSection__SWIG_2(expiryTime, DoubleVector.getCPtr(strikes), strikes, QuoteHandleVector.getCPtr(stdDevHandles), stdDevHandles, QuoteHandle.getCPtr(atmLevel), atmLevel, Cubic.getCPtr(interpolator), interpolator, DayCounter.getCPtr(dc), dc), true);
  }

  public CubicInterpolatedSmileSection(double expiryTime, DoubleVector strikes, QuoteHandleVector stdDevHandles, QuoteHandle atmLevel, Cubic interpolator) {
    this(QuantLibJNI.new_CubicInterpolatedSmileSection__SWIG_3(expiryTime, DoubleVector.getCPtr(strikes), strikes, QuoteHandleVector.getCPtr(stdDevHandles), stdDevHandles, QuoteHandle.getCPtr(atmLevel), atmLevel, Cubic.getCPtr(interpolator), interpolator), true);
  }

  public CubicInterpolatedSmileSection(double expiryTime, DoubleVector strikes, QuoteHandleVector stdDevHandles, QuoteHandle atmLevel) {
    this(QuantLibJNI.new_CubicInterpolatedSmileSection__SWIG_4(expiryTime, DoubleVector.getCPtr(strikes), strikes, QuoteHandleVector.getCPtr(stdDevHandles), stdDevHandles, QuoteHandle.getCPtr(atmLevel), atmLevel), true);
  }

  public CubicInterpolatedSmileSection(double expiryTime, DoubleVector strikes, DoubleVector stdDevs, double atmLevel, Cubic interpolator, DayCounter dc, VolatilityType type, double shift) {
    this(QuantLibJNI.new_CubicInterpolatedSmileSection__SWIG_5(expiryTime, DoubleVector.getCPtr(strikes), strikes, DoubleVector.getCPtr(stdDevs), stdDevs, atmLevel, Cubic.getCPtr(interpolator), interpolator, DayCounter.getCPtr(dc), dc, type.swigValue(), shift), true);
  }

  public CubicInterpolatedSmileSection(double expiryTime, DoubleVector strikes, DoubleVector stdDevs, double atmLevel, Cubic interpolator, DayCounter dc, VolatilityType type) {
    this(QuantLibJNI.new_CubicInterpolatedSmileSection__SWIG_6(expiryTime, DoubleVector.getCPtr(strikes), strikes, DoubleVector.getCPtr(stdDevs), stdDevs, atmLevel, Cubic.getCPtr(interpolator), interpolator, DayCounter.getCPtr(dc), dc, type.swigValue()), true);
  }

  public CubicInterpolatedSmileSection(double expiryTime, DoubleVector strikes, DoubleVector stdDevs, double atmLevel, Cubic interpolator, DayCounter dc) {
    this(QuantLibJNI.new_CubicInterpolatedSmileSection__SWIG_7(expiryTime, DoubleVector.getCPtr(strikes), strikes, DoubleVector.getCPtr(stdDevs), stdDevs, atmLevel, Cubic.getCPtr(interpolator), interpolator, DayCounter.getCPtr(dc), dc), true);
  }

  public CubicInterpolatedSmileSection(double expiryTime, DoubleVector strikes, DoubleVector stdDevs, double atmLevel, Cubic interpolator) {
    this(QuantLibJNI.new_CubicInterpolatedSmileSection__SWIG_8(expiryTime, DoubleVector.getCPtr(strikes), strikes, DoubleVector.getCPtr(stdDevs), stdDevs, atmLevel, Cubic.getCPtr(interpolator), interpolator), true);
  }

  public CubicInterpolatedSmileSection(double expiryTime, DoubleVector strikes, DoubleVector stdDevs, double atmLevel) {
    this(QuantLibJNI.new_CubicInterpolatedSmileSection__SWIG_9(expiryTime, DoubleVector.getCPtr(strikes), strikes, DoubleVector.getCPtr(stdDevs), stdDevs, atmLevel), true);
  }

  public CubicInterpolatedSmileSection(Date d, DoubleVector strikes, QuoteHandleVector stdDevHandles, QuoteHandle atmLevel, DayCounter dc, Cubic interpolator, Date referenceDate, VolatilityType type, double shift) {
    this(QuantLibJNI.new_CubicInterpolatedSmileSection__SWIG_10(Date.getCPtr(d), d, DoubleVector.getCPtr(strikes), strikes, QuoteHandleVector.getCPtr(stdDevHandles), stdDevHandles, QuoteHandle.getCPtr(atmLevel), atmLevel, DayCounter.getCPtr(dc), dc, Cubic.getCPtr(interpolator), interpolator, Date.getCPtr(referenceDate), referenceDate, type.swigValue(), shift), true);
  }

  public CubicInterpolatedSmileSection(Date d, DoubleVector strikes, QuoteHandleVector stdDevHandles, QuoteHandle atmLevel, DayCounter dc, Cubic interpolator, Date referenceDate, VolatilityType type) {
    this(QuantLibJNI.new_CubicInterpolatedSmileSection__SWIG_11(Date.getCPtr(d), d, DoubleVector.getCPtr(strikes), strikes, QuoteHandleVector.getCPtr(stdDevHandles), stdDevHandles, QuoteHandle.getCPtr(atmLevel), atmLevel, DayCounter.getCPtr(dc), dc, Cubic.getCPtr(interpolator), interpolator, Date.getCPtr(referenceDate), referenceDate, type.swigValue()), true);
  }

  public CubicInterpolatedSmileSection(Date d, DoubleVector strikes, QuoteHandleVector stdDevHandles, QuoteHandle atmLevel, DayCounter dc, Cubic interpolator, Date referenceDate) {
    this(QuantLibJNI.new_CubicInterpolatedSmileSection__SWIG_12(Date.getCPtr(d), d, DoubleVector.getCPtr(strikes), strikes, QuoteHandleVector.getCPtr(stdDevHandles), stdDevHandles, QuoteHandle.getCPtr(atmLevel), atmLevel, DayCounter.getCPtr(dc), dc, Cubic.getCPtr(interpolator), interpolator, Date.getCPtr(referenceDate), referenceDate), true);
  }

  public CubicInterpolatedSmileSection(Date d, DoubleVector strikes, QuoteHandleVector stdDevHandles, QuoteHandle atmLevel, DayCounter dc, Cubic interpolator) {
    this(QuantLibJNI.new_CubicInterpolatedSmileSection__SWIG_13(Date.getCPtr(d), d, DoubleVector.getCPtr(strikes), strikes, QuoteHandleVector.getCPtr(stdDevHandles), stdDevHandles, QuoteHandle.getCPtr(atmLevel), atmLevel, DayCounter.getCPtr(dc), dc, Cubic.getCPtr(interpolator), interpolator), true);
  }

  public CubicInterpolatedSmileSection(Date d, DoubleVector strikes, QuoteHandleVector stdDevHandles, QuoteHandle atmLevel, DayCounter dc) {
    this(QuantLibJNI.new_CubicInterpolatedSmileSection__SWIG_14(Date.getCPtr(d), d, DoubleVector.getCPtr(strikes), strikes, QuoteHandleVector.getCPtr(stdDevHandles), stdDevHandles, QuoteHandle.getCPtr(atmLevel), atmLevel, DayCounter.getCPtr(dc), dc), true);
  }

  public CubicInterpolatedSmileSection(Date d, DoubleVector strikes, QuoteHandleVector stdDevHandles, QuoteHandle atmLevel) {
    this(QuantLibJNI.new_CubicInterpolatedSmileSection__SWIG_15(Date.getCPtr(d), d, DoubleVector.getCPtr(strikes), strikes, QuoteHandleVector.getCPtr(stdDevHandles), stdDevHandles, QuoteHandle.getCPtr(atmLevel), atmLevel), true);
  }

  public CubicInterpolatedSmileSection(Date d, DoubleVector strikes, DoubleVector stdDevs, double atmLevel, DayCounter dc, Cubic interpolator, Date referenceDate, VolatilityType type, double shift) {
    this(QuantLibJNI.new_CubicInterpolatedSmileSection__SWIG_16(Date.getCPtr(d), d, DoubleVector.getCPtr(strikes), strikes, DoubleVector.getCPtr(stdDevs), stdDevs, atmLevel, DayCounter.getCPtr(dc), dc, Cubic.getCPtr(interpolator), interpolator, Date.getCPtr(referenceDate), referenceDate, type.swigValue(), shift), true);
  }

  public CubicInterpolatedSmileSection(Date d, DoubleVector strikes, DoubleVector stdDevs, double atmLevel, DayCounter dc, Cubic interpolator, Date referenceDate, VolatilityType type) {
    this(QuantLibJNI.new_CubicInterpolatedSmileSection__SWIG_17(Date.getCPtr(d), d, DoubleVector.getCPtr(strikes), strikes, DoubleVector.getCPtr(stdDevs), stdDevs, atmLevel, DayCounter.getCPtr(dc), dc, Cubic.getCPtr(interpolator), interpolator, Date.getCPtr(referenceDate), referenceDate, type.swigValue()), true);
  }

  public CubicInterpolatedSmileSection(Date d, DoubleVector strikes, DoubleVector stdDevs, double atmLevel, DayCounter dc, Cubic interpolator, Date referenceDate) {
    this(QuantLibJNI.new_CubicInterpolatedSmileSection__SWIG_18(Date.getCPtr(d), d, DoubleVector.getCPtr(strikes), strikes, DoubleVector.getCPtr(stdDevs), stdDevs, atmLevel, DayCounter.getCPtr(dc), dc, Cubic.getCPtr(interpolator), interpolator, Date.getCPtr(referenceDate), referenceDate), true);
  }

  public CubicInterpolatedSmileSection(Date d, DoubleVector strikes, DoubleVector stdDevs, double atmLevel, DayCounter dc, Cubic interpolator) {
    this(QuantLibJNI.new_CubicInterpolatedSmileSection__SWIG_19(Date.getCPtr(d), d, DoubleVector.getCPtr(strikes), strikes, DoubleVector.getCPtr(stdDevs), stdDevs, atmLevel, DayCounter.getCPtr(dc), dc, Cubic.getCPtr(interpolator), interpolator), true);
  }

  public CubicInterpolatedSmileSection(Date d, DoubleVector strikes, DoubleVector stdDevs, double atmLevel, DayCounter dc) {
    this(QuantLibJNI.new_CubicInterpolatedSmileSection__SWIG_20(Date.getCPtr(d), d, DoubleVector.getCPtr(strikes), strikes, DoubleVector.getCPtr(stdDevs), stdDevs, atmLevel, DayCounter.getCPtr(dc), dc), true);
  }

  public CubicInterpolatedSmileSection(Date d, DoubleVector strikes, DoubleVector stdDevs, double atmLevel) {
    this(QuantLibJNI.new_CubicInterpolatedSmileSection__SWIG_21(Date.getCPtr(d), d, DoubleVector.getCPtr(strikes), strikes, DoubleVector.getCPtr(stdDevs), stdDevs, atmLevel), true);
  }

}
