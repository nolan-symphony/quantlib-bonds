/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.quantlib;

public class FraRateHelper extends RateHelper {
  private transient long swigCPtr;
  private transient boolean swigCMemOwnDerived;

  protected FraRateHelper(long cPtr, boolean cMemoryOwn) {
    super(QuantLibJNI.FraRateHelper_SWIGSmartPtrUpcast(cPtr), true);
    swigCMemOwnDerived = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(FraRateHelper obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void swigSetCMemOwn(boolean own) {
    swigCMemOwnDerived = own;
    super.swigSetCMemOwn(own);
  }

  @SuppressWarnings("deprecation")
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwnDerived) {
        swigCMemOwnDerived = false;
        QuantLibJNI.delete_FraRateHelper(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public FraRateHelper(QuoteHandle rate, long monthsToStart, long monthsToEnd, long fixingDays, Calendar calendar, BusinessDayConvention convention, boolean endOfMonth, DayCounter dayCounter, Pillar.Choice pillar, Date customPillarDate, boolean useIndexedCoupon) {
    this(QuantLibJNI.new_FraRateHelper__SWIG_0(QuoteHandle.getCPtr(rate), rate, monthsToStart, monthsToEnd, fixingDays, Calendar.getCPtr(calendar), calendar, convention.swigValue(), endOfMonth, DayCounter.getCPtr(dayCounter), dayCounter, pillar.swigValue(), Date.getCPtr(customPillarDate), customPillarDate, useIndexedCoupon), true);
  }

  public FraRateHelper(QuoteHandle rate, long monthsToStart, long monthsToEnd, long fixingDays, Calendar calendar, BusinessDayConvention convention, boolean endOfMonth, DayCounter dayCounter, Pillar.Choice pillar, Date customPillarDate) {
    this(QuantLibJNI.new_FraRateHelper__SWIG_1(QuoteHandle.getCPtr(rate), rate, monthsToStart, monthsToEnd, fixingDays, Calendar.getCPtr(calendar), calendar, convention.swigValue(), endOfMonth, DayCounter.getCPtr(dayCounter), dayCounter, pillar.swigValue(), Date.getCPtr(customPillarDate), customPillarDate), true);
  }

  public FraRateHelper(QuoteHandle rate, long monthsToStart, long monthsToEnd, long fixingDays, Calendar calendar, BusinessDayConvention convention, boolean endOfMonth, DayCounter dayCounter, Pillar.Choice pillar) {
    this(QuantLibJNI.new_FraRateHelper__SWIG_2(QuoteHandle.getCPtr(rate), rate, monthsToStart, monthsToEnd, fixingDays, Calendar.getCPtr(calendar), calendar, convention.swigValue(), endOfMonth, DayCounter.getCPtr(dayCounter), dayCounter, pillar.swigValue()), true);
  }

  public FraRateHelper(QuoteHandle rate, long monthsToStart, long monthsToEnd, long fixingDays, Calendar calendar, BusinessDayConvention convention, boolean endOfMonth, DayCounter dayCounter) {
    this(QuantLibJNI.new_FraRateHelper__SWIG_3(QuoteHandle.getCPtr(rate), rate, monthsToStart, monthsToEnd, fixingDays, Calendar.getCPtr(calendar), calendar, convention.swigValue(), endOfMonth, DayCounter.getCPtr(dayCounter), dayCounter), true);
  }

  public FraRateHelper(double rate, long monthsToStart, long monthsToEnd, long fixingDays, Calendar calendar, BusinessDayConvention convention, boolean endOfMonth, DayCounter dayCounter, Pillar.Choice pillar, Date customPillarDate, boolean useIndexedCoupon) {
    this(QuantLibJNI.new_FraRateHelper__SWIG_4(rate, monthsToStart, monthsToEnd, fixingDays, Calendar.getCPtr(calendar), calendar, convention.swigValue(), endOfMonth, DayCounter.getCPtr(dayCounter), dayCounter, pillar.swigValue(), Date.getCPtr(customPillarDate), customPillarDate, useIndexedCoupon), true);
  }

  public FraRateHelper(double rate, long monthsToStart, long monthsToEnd, long fixingDays, Calendar calendar, BusinessDayConvention convention, boolean endOfMonth, DayCounter dayCounter, Pillar.Choice pillar, Date customPillarDate) {
    this(QuantLibJNI.new_FraRateHelper__SWIG_5(rate, monthsToStart, monthsToEnd, fixingDays, Calendar.getCPtr(calendar), calendar, convention.swigValue(), endOfMonth, DayCounter.getCPtr(dayCounter), dayCounter, pillar.swigValue(), Date.getCPtr(customPillarDate), customPillarDate), true);
  }

  public FraRateHelper(double rate, long monthsToStart, long monthsToEnd, long fixingDays, Calendar calendar, BusinessDayConvention convention, boolean endOfMonth, DayCounter dayCounter, Pillar.Choice pillar) {
    this(QuantLibJNI.new_FraRateHelper__SWIG_6(rate, monthsToStart, monthsToEnd, fixingDays, Calendar.getCPtr(calendar), calendar, convention.swigValue(), endOfMonth, DayCounter.getCPtr(dayCounter), dayCounter, pillar.swigValue()), true);
  }

  public FraRateHelper(double rate, long monthsToStart, long monthsToEnd, long fixingDays, Calendar calendar, BusinessDayConvention convention, boolean endOfMonth, DayCounter dayCounter) {
    this(QuantLibJNI.new_FraRateHelper__SWIG_7(rate, monthsToStart, monthsToEnd, fixingDays, Calendar.getCPtr(calendar), calendar, convention.swigValue(), endOfMonth, DayCounter.getCPtr(dayCounter), dayCounter), true);
  }

  public FraRateHelper(QuoteHandle rate, long monthsToStart, IborIndex index, Pillar.Choice pillar, Date customPillarDate, boolean useIndexedCoupon) {
    this(QuantLibJNI.new_FraRateHelper__SWIG_8(QuoteHandle.getCPtr(rate), rate, monthsToStart, IborIndex.getCPtr(index), index, pillar.swigValue(), Date.getCPtr(customPillarDate), customPillarDate, useIndexedCoupon), true);
  }

  public FraRateHelper(QuoteHandle rate, long monthsToStart, IborIndex index, Pillar.Choice pillar, Date customPillarDate) {
    this(QuantLibJNI.new_FraRateHelper__SWIG_9(QuoteHandle.getCPtr(rate), rate, monthsToStart, IborIndex.getCPtr(index), index, pillar.swigValue(), Date.getCPtr(customPillarDate), customPillarDate), true);
  }

  public FraRateHelper(QuoteHandle rate, long monthsToStart, IborIndex index, Pillar.Choice pillar) {
    this(QuantLibJNI.new_FraRateHelper__SWIG_10(QuoteHandle.getCPtr(rate), rate, monthsToStart, IborIndex.getCPtr(index), index, pillar.swigValue()), true);
  }

  public FraRateHelper(QuoteHandle rate, long monthsToStart, IborIndex index) {
    this(QuantLibJNI.new_FraRateHelper__SWIG_11(QuoteHandle.getCPtr(rate), rate, monthsToStart, IborIndex.getCPtr(index), index), true);
  }

  public FraRateHelper(double rate, long monthsToStart, IborIndex index, Pillar.Choice pillar, Date customPillarDate, boolean useIndexedCoupon) {
    this(QuantLibJNI.new_FraRateHelper__SWIG_12(rate, monthsToStart, IborIndex.getCPtr(index), index, pillar.swigValue(), Date.getCPtr(customPillarDate), customPillarDate, useIndexedCoupon), true);
  }

  public FraRateHelper(double rate, long monthsToStart, IborIndex index, Pillar.Choice pillar, Date customPillarDate) {
    this(QuantLibJNI.new_FraRateHelper__SWIG_13(rate, monthsToStart, IborIndex.getCPtr(index), index, pillar.swigValue(), Date.getCPtr(customPillarDate), customPillarDate), true);
  }

  public FraRateHelper(double rate, long monthsToStart, IborIndex index, Pillar.Choice pillar) {
    this(QuantLibJNI.new_FraRateHelper__SWIG_14(rate, monthsToStart, IborIndex.getCPtr(index), index, pillar.swigValue()), true);
  }

  public FraRateHelper(double rate, long monthsToStart, IborIndex index) {
    this(QuantLibJNI.new_FraRateHelper__SWIG_15(rate, monthsToStart, IborIndex.getCPtr(index), index), true);
  }

  public FraRateHelper(QuoteHandle rate, long immOffsetStart, long immOffsetEnd, IborIndex iborIndex, Pillar.Choice pillar, Date customPillarDate, boolean useIndexedCoupon) {
    this(QuantLibJNI.new_FraRateHelper__SWIG_16(QuoteHandle.getCPtr(rate), rate, immOffsetStart, immOffsetEnd, IborIndex.getCPtr(iborIndex), iborIndex, pillar.swigValue(), Date.getCPtr(customPillarDate), customPillarDate, useIndexedCoupon), true);
  }

  public FraRateHelper(QuoteHandle rate, long immOffsetStart, long immOffsetEnd, IborIndex iborIndex, Pillar.Choice pillar, Date customPillarDate) {
    this(QuantLibJNI.new_FraRateHelper__SWIG_17(QuoteHandle.getCPtr(rate), rate, immOffsetStart, immOffsetEnd, IborIndex.getCPtr(iborIndex), iborIndex, pillar.swigValue(), Date.getCPtr(customPillarDate), customPillarDate), true);
  }

  public FraRateHelper(QuoteHandle rate, long immOffsetStart, long immOffsetEnd, IborIndex iborIndex, Pillar.Choice pillar) {
    this(QuantLibJNI.new_FraRateHelper__SWIG_18(QuoteHandle.getCPtr(rate), rate, immOffsetStart, immOffsetEnd, IborIndex.getCPtr(iborIndex), iborIndex, pillar.swigValue()), true);
  }

  public FraRateHelper(QuoteHandle rate, long immOffsetStart, long immOffsetEnd, IborIndex iborIndex) {
    this(QuantLibJNI.new_FraRateHelper__SWIG_19(QuoteHandle.getCPtr(rate), rate, immOffsetStart, immOffsetEnd, IborIndex.getCPtr(iborIndex), iborIndex), true);
  }

  public FraRateHelper(double rate, long immOffsetStart, long immOffsetEnd, IborIndex iborIndex, Pillar.Choice pillar, Date customPillarDate, boolean useIndexedCoupon) {
    this(QuantLibJNI.new_FraRateHelper__SWIG_20(rate, immOffsetStart, immOffsetEnd, IborIndex.getCPtr(iborIndex), iborIndex, pillar.swigValue(), Date.getCPtr(customPillarDate), customPillarDate, useIndexedCoupon), true);
  }

  public FraRateHelper(double rate, long immOffsetStart, long immOffsetEnd, IborIndex iborIndex, Pillar.Choice pillar, Date customPillarDate) {
    this(QuantLibJNI.new_FraRateHelper__SWIG_21(rate, immOffsetStart, immOffsetEnd, IborIndex.getCPtr(iborIndex), iborIndex, pillar.swigValue(), Date.getCPtr(customPillarDate), customPillarDate), true);
  }

  public FraRateHelper(double rate, long immOffsetStart, long immOffsetEnd, IborIndex iborIndex, Pillar.Choice pillar) {
    this(QuantLibJNI.new_FraRateHelper__SWIG_22(rate, immOffsetStart, immOffsetEnd, IborIndex.getCPtr(iborIndex), iborIndex, pillar.swigValue()), true);
  }

  public FraRateHelper(double rate, long immOffsetStart, long immOffsetEnd, IborIndex iborIndex) {
    this(QuantLibJNI.new_FraRateHelper__SWIG_23(rate, immOffsetStart, immOffsetEnd, IborIndex.getCPtr(iborIndex), iborIndex), true);
  }

}
